apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "cortex.fullname" . }}
  labels:
    {{- include "cortex.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cortex.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cortex.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cortex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.jobIOStorage.pvc.enabled }}
        - name: job-io
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" (include "cortex.fullname" .) "job-io" | quote }}
        {{- end }}
        {{- include "cortex.caCertVolumes" . | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            {{- if .Values.jobIOStorage.pvc.enabled }}
            - name: job-io
              mountPath: /tmp/cortex-jobs
            {{- end }}
            {{- include "cortex.caCertVolumeMounts" . | nindent 12 }}
          env:
            - name: ws_trusted_ca_cert_files
              value: {{ include "cortex.wsCACertFilenamesCommaSeparated" . | quote }}
            - name: es_trusted_ca_cert_files
              value: {{ include "cortex.esCACertFilenamesCommaSeparated" . | quote }}
            - name: es_uri
              value: {{ default .Values.elasticsearch.url (include "cortex.elasticURL" .) }}
            - name: es_password
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.elasticsearch.userSecret (include "cortex.elasticUserSecretName" .) }}
                  key: {{ .Values.elasticsearch.username }}
            - name: es_username
              value: {{ .Values.elasticsearch.username }}
            - name: kubernetes_job_pvc
              value: '{{ include "cortex.fullname" .}}-job-io'
          ports:
            - name: http
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
