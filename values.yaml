# Default values for cortex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: thehiveproject/cortex
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9001

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cortex.example.com
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

elasticsearch:
  # Elasticsearch set up by this chart using Elastic Cloud on Kubernetes (ECK)
  eck:
    # If true, this chart will set up an Elasticsearch cluster using ECK.
    enabled: true
    # If true, and ECK appears to be missing, we'll continue
    # anyway. Useful for `helm template`.
    ignoreMissing: false
    # See
    # https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-deploy-elasticsearch.html
    # for a start
    elasticSearchSpec: |
      version: "7.11.2"
      nodeSets:
        - name: default
          count: 1
          config:
            node.store.allow_mmap: false
  # Elasticsearch set up outside the auspices of this chart. See more
  # values to set below.
  external:
    enabled: false
  #
  # If ECK is enabled, you don't need to mess with the rest of these.
  # -----------------------------------------------------------------
  #
  # Username to use when connecting to Elasticsearch.
  username: elastic
  # The name of an opaque secret, whose data is a mapping (dictionary,
  # object) with the username as key and the password as value. If ECK
  # is enabled, the default is the secret created by ECK. If ECK is
  # not enabled, and this is not set, a secret will be created using
  # the given `password`, below.
  userSecret: ""
  # A secret is created and used for Elasticsearch login, with this
  # password and the username above, if ECK is not enabled and
  # userSecret is not set.
  password: ""
  # Where to reach the Elasticsearch cluster. Probably
  # "https://something:9200". If ECK is enabled, the default is the
  # service created by ECK.
  url: ""
  # A CA cert to trust when connecting to Elasticsearch using
  # HTTPS. The secret should contain a key "tls.crt" whose value is
  # the PEM-encoded cert. If ECK is enabled, the default is the secret
  # created by ECK. If ECK is not enabled, and this is not set, a
  # secret will be created using the `caCert` below.
  caCertSecret: ""
  # A secret is created and used for CA cert trusting, using a
  # PEM-encoded cert from this value, if ECK is not enabled and
  # caCertSecret is not set.
  caCert: ""



# Cortex sends inputs to analyzers and receives reports back via a
# persistent volume it shares with the jobs. These are the parameters
# for that filesystem. It's created with the ReadWriteMany access
# mode, which tells the cluster that both the Cortex pod and the
# analyzer/responder job pod will need to be able both to read and
# write this volume. Far fewer storage drivers support this mode than
# ReadWriteOnce, but at least one should support you. You may have to
# manually create the PersistentVolume that backs this claim.
jobIOStorage:
  pvc:
    enabled: true
    storageClass: default
    size: 10Gi
